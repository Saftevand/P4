//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\marku\OneDrive\Documents\p4\HaCS\HaCS\HaCS.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HaCS {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class HaCSLexer : Lexer {
	public const int
		INT=1, FLOAT=2, CHAR=3, BOOL=4, INT_Type=5, FLOAT_Type=6, CHAR_Type=7, 
		BOOL_Type=8, LIST=9, MAIN=10, IF=11, ELSEIF=12, ELSE=13, RETURN=14, IDENTIFIER=15, 
		EXP=16, MUL=17, DIV=18, MOD=19, ADD=20, SUB=21, AND=22, OR=23, PIPE=24, 
		EQ=25, NEQ=26, GT=27, GE=28, LT=29, DOTDOT=30, LE=31, LTMINUS=32, NEGATE=33, 
		ASSIGN=34, LPAREN=35, RPAREN=36, LBRACKET=37, RBRACKET=38, LCURLBRACKET=39, 
		RCURLBRACKET=40, DELIMITER=41, EOS=42, LAMBDA=43, FIND=44, WS=45, COMMENT=46, 
		LINE_COMMENT=47;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "PIPE", "EQ", "NEQ", 
		"GT", "GE", "LT", "DOTDOT", "LE", "LTMINUS", "NEGATE", "ASSIGN", "LPAREN", 
		"RPAREN", "LBRACKET", "RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", 
		"EOS", "LAMBDA", "FIND", "WS", "COMMENT", "LINE_COMMENT"
	};


		protected const int EOF = Eof;
		protected const int HIDDEN = Hidden;


	public HaCSLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'int'", "'float'", "'char'", "'bool'", 
		"'List'", "'main'", "'if'", "'elseif'", "'else'", "'return'", null, "'^'", 
		"'*'", "'/'", "'%'", "'+'", "'-'", "'&&'", "'||'", "'|'", "'=='", "'!='", 
		"'>'", "'>='", "'<'", "'..'", "'<='", "'<-'", "'!'", "'='", "'('", "')'", 
		"'['", "']'", "'{'", "'}'", "','", "';'", "'=>'", "'.find'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "PIPE", "EQ", "NEQ", 
		"GT", "GE", "LT", "DOTDOT", "LE", "LTMINUS", "NEGATE", "ASSIGN", "LPAREN", 
		"RPAREN", "LBRACKET", "RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", 
		"EOS", "LAMBDA", "FIND", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HaCS.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x31\x12B\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x3\x2\x5\x2\x63"+
		"\n\x2\x3\x2\x6\x2\x66\n\x2\r\x2\xE\x2g\x3\x3\x5\x3k\n\x3\x3\x3\x6\x3n"+
		"\n\x3\r\x3\xE\x3o\x3\x3\x3\x3\x6\x3t\n\x3\r\x3\xE\x3u\x5\x3x\n\x3\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5\x85"+
		"\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\x10\x5\x10\xBC\n\x10\x3\x10\x3\x10\a\x10\xC0\n\x10\f\x10\xE\x10"+
		"\xC3\v\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3"+
		"\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!"+
		"\x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3"+
		")\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3,\x3-\x3-\x3-\x3-\x3-\x3-\x3.\x6.\x10D"+
		"\n.\r.\xE.\x10E\x3.\x3.\x3/\x3/\x3/\x3/\a/\x117\n/\f/\xE/\x11A\v/\x3/"+
		"\x3/\x3/\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x30\a\x30\x125\n\x30\f\x30\xE"+
		"\x30\x128\v\x30\x3\x30\x3\x30\x3\x118\x2\x2\x31\x3\x2\x3\x5\x2\x4\a\x2"+
		"\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r"+
		"\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2"+
		"\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2"+
		"%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x3"+
		"\x2\b\x3\x2\x32;\x3\x2\x38\x38\x4\x2\x43\\\x63|\x5\x2\x32;\x43\\\x63|"+
		"\x5\x2\v\f\xE\xF\"\"\x4\x2\f\f\xF\xF\x136\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
		"=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2"+
		"\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3"+
		"\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2"+
		"\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2"+
		"_\x3\x2\x2\x2\x3\x62\x3\x2\x2\x2\x5j\x3\x2\x2\x2\ay\x3\x2\x2\x2\t\x84"+
		"\x3\x2\x2\x2\v\x86\x3\x2\x2\x2\r\x8A\x3\x2\x2\x2\xF\x90\x3\x2\x2\x2\x11"+
		"\x95\x3\x2\x2\x2\x13\x9A\x3\x2\x2\x2\x15\x9F\x3\x2\x2\x2\x17\xA4\x3\x2"+
		"\x2\x2\x19\xA7\x3\x2\x2\x2\x1B\xAE\x3\x2\x2\x2\x1D\xB3\x3\x2\x2\x2\x1F"+
		"\xBB\x3\x2\x2\x2!\xC4\x3\x2\x2\x2#\xC6\x3\x2\x2\x2%\xC8\x3\x2\x2\x2\'"+
		"\xCA\x3\x2\x2\x2)\xCC\x3\x2\x2\x2+\xCE\x3\x2\x2\x2-\xD0\x3\x2\x2\x2/\xD3"+
		"\x3\x2\x2\x2\x31\xD6\x3\x2\x2\x2\x33\xD8\x3\x2\x2\x2\x35\xDB\x3\x2\x2"+
		"\x2\x37\xDE\x3\x2\x2\x2\x39\xE0\x3\x2\x2\x2;\xE3\x3\x2\x2\x2=\xE5\x3\x2"+
		"\x2\x2?\xE8\x3\x2\x2\x2\x41\xEB\x3\x2\x2\x2\x43\xEE\x3\x2\x2\x2\x45\xF0"+
		"\x3\x2\x2\x2G\xF2\x3\x2\x2\x2I\xF4\x3\x2\x2\x2K\xF6\x3\x2\x2\x2M\xF8\x3"+
		"\x2\x2\x2O\xFA\x3\x2\x2\x2Q\xFC\x3\x2\x2\x2S\xFE\x3\x2\x2\x2U\x100\x3"+
		"\x2\x2\x2W\x102\x3\x2\x2\x2Y\x105\x3\x2\x2\x2[\x10C\x3\x2\x2\x2]\x112"+
		"\x3\x2\x2\x2_\x120\x3\x2\x2\x2\x61\x63\a/\x2\x2\x62\x61\x3\x2\x2\x2\x62"+
		"\x63\x3\x2\x2\x2\x63\x65\x3\x2\x2\x2\x64\x66\x4\x32;\x2\x65\x64\x3\x2"+
		"\x2\x2\x66g\x3\x2\x2\x2g\x65\x3\x2\x2\x2gh\x3\x2\x2\x2h\x4\x3\x2\x2\x2"+
		"ik\a/\x2\x2ji\x3\x2\x2\x2jk\x3\x2\x2\x2km\x3\x2\x2\x2ln\t\x2\x2\x2ml\x3"+
		"\x2\x2\x2no\x3\x2\x2\x2om\x3\x2\x2\x2op\x3\x2\x2\x2pw\x3\x2\x2\x2qs\a"+
		"\x30\x2\x2rt\t\x2\x2\x2sr\x3\x2\x2\x2tu\x3\x2\x2\x2us\x3\x2\x2\x2uv\x3"+
		"\x2\x2\x2vx\x3\x2\x2\x2wq\x3\x2\x2\x2wx\x3\x2\x2\x2x\x6\x3\x2\x2\x2yz"+
		"\t\x3\x2\x2z\b\x3\x2\x2\x2{|\av\x2\x2|}\at\x2\x2}~\aw\x2\x2~\x85\ag\x2"+
		"\x2\x7F\x80\ah\x2\x2\x80\x81\a\x63\x2\x2\x81\x82\an\x2\x2\x82\x83\au\x2"+
		"\x2\x83\x85\ag\x2\x2\x84{\x3\x2\x2\x2\x84\x7F\x3\x2\x2\x2\x85\n\x3\x2"+
		"\x2\x2\x86\x87\ak\x2\x2\x87\x88\ap\x2\x2\x88\x89\av\x2\x2\x89\f\x3\x2"+
		"\x2\x2\x8A\x8B\ah\x2\x2\x8B\x8C\an\x2\x2\x8C\x8D\aq\x2\x2\x8D\x8E\a\x63"+
		"\x2\x2\x8E\x8F\av\x2\x2\x8F\xE\x3\x2\x2\x2\x90\x91\a\x65\x2\x2\x91\x92"+
		"\aj\x2\x2\x92\x93\a\x63\x2\x2\x93\x94\at\x2\x2\x94\x10\x3\x2\x2\x2\x95"+
		"\x96\a\x64\x2\x2\x96\x97\aq\x2\x2\x97\x98\aq\x2\x2\x98\x99\an\x2\x2\x99"+
		"\x12\x3\x2\x2\x2\x9A\x9B\aN\x2\x2\x9B\x9C\ak\x2\x2\x9C\x9D\au\x2\x2\x9D"+
		"\x9E\av\x2\x2\x9E\x14\x3\x2\x2\x2\x9F\xA0\ao\x2\x2\xA0\xA1\a\x63\x2\x2"+
		"\xA1\xA2\ak\x2\x2\xA2\xA3\ap\x2\x2\xA3\x16\x3\x2\x2\x2\xA4\xA5\ak\x2\x2"+
		"\xA5\xA6\ah\x2\x2\xA6\x18\x3\x2\x2\x2\xA7\xA8\ag\x2\x2\xA8\xA9\an\x2\x2"+
		"\xA9\xAA\au\x2\x2\xAA\xAB\ag\x2\x2\xAB\xAC\ak\x2\x2\xAC\xAD\ah\x2\x2\xAD"+
		"\x1A\x3\x2\x2\x2\xAE\xAF\ag\x2\x2\xAF\xB0\an\x2\x2\xB0\xB1\au\x2\x2\xB1"+
		"\xB2\ag\x2\x2\xB2\x1C\x3\x2\x2\x2\xB3\xB4\at\x2\x2\xB4\xB5\ag\x2\x2\xB5"+
		"\xB6\av\x2\x2\xB6\xB7\aw\x2\x2\xB7\xB8\at\x2\x2\xB8\xB9\ap\x2\x2\xB9\x1E"+
		"\x3\x2\x2\x2\xBA\xBC\a\x61\x2\x2\xBB\xBA\x3\x2\x2\x2\xBB\xBC\x3\x2\x2"+
		"\x2\xBC\xBD\x3\x2\x2\x2\xBD\xC1\t\x4\x2\x2\xBE\xC0\t\x5\x2\x2\xBF\xBE"+
		"\x3\x2\x2\x2\xC0\xC3\x3\x2\x2\x2\xC1\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2"+
		"\x2\xC2 \x3\x2\x2\x2\xC3\xC1\x3\x2\x2\x2\xC4\xC5\a`\x2\x2\xC5\"\x3\x2"+
		"\x2\x2\xC6\xC7\a,\x2\x2\xC7$\x3\x2\x2\x2\xC8\xC9\a\x31\x2\x2\xC9&\x3\x2"+
		"\x2\x2\xCA\xCB\a\'\x2\x2\xCB(\x3\x2\x2\x2\xCC\xCD\a-\x2\x2\xCD*\x3\x2"+
		"\x2\x2\xCE\xCF\a/\x2\x2\xCF,\x3\x2\x2\x2\xD0\xD1\a(\x2\x2\xD1\xD2\a(\x2"+
		"\x2\xD2.\x3\x2\x2\x2\xD3\xD4\a~\x2\x2\xD4\xD5\a~\x2\x2\xD5\x30\x3\x2\x2"+
		"\x2\xD6\xD7\a~\x2\x2\xD7\x32\x3\x2\x2\x2\xD8\xD9\a?\x2\x2\xD9\xDA\a?\x2"+
		"\x2\xDA\x34\x3\x2\x2\x2\xDB\xDC\a#\x2\x2\xDC\xDD\a?\x2\x2\xDD\x36\x3\x2"+
		"\x2\x2\xDE\xDF\a@\x2\x2\xDF\x38\x3\x2\x2\x2\xE0\xE1\a@\x2\x2\xE1\xE2\a"+
		"?\x2\x2\xE2:\x3\x2\x2\x2\xE3\xE4\a>\x2\x2\xE4<\x3\x2\x2\x2\xE5\xE6\a\x30"+
		"\x2\x2\xE6\xE7\a\x30\x2\x2\xE7>\x3\x2\x2\x2\xE8\xE9\a>\x2\x2\xE9\xEA\a"+
		"?\x2\x2\xEA@\x3\x2\x2\x2\xEB\xEC\a>\x2\x2\xEC\xED\a/\x2\x2\xED\x42\x3"+
		"\x2\x2\x2\xEE\xEF\a#\x2\x2\xEF\x44\x3\x2\x2\x2\xF0\xF1\a?\x2\x2\xF1\x46"+
		"\x3\x2\x2\x2\xF2\xF3\a*\x2\x2\xF3H\x3\x2\x2\x2\xF4\xF5\a+\x2\x2\xF5J\x3"+
		"\x2\x2\x2\xF6\xF7\a]\x2\x2\xF7L\x3\x2\x2\x2\xF8\xF9\a_\x2\x2\xF9N\x3\x2"+
		"\x2\x2\xFA\xFB\a}\x2\x2\xFBP\x3\x2\x2\x2\xFC\xFD\a\x7F\x2\x2\xFDR\x3\x2"+
		"\x2\x2\xFE\xFF\a.\x2\x2\xFFT\x3\x2\x2\x2\x100\x101\a=\x2\x2\x101V\x3\x2"+
		"\x2\x2\x102\x103\a?\x2\x2\x103\x104\a@\x2\x2\x104X\x3\x2\x2\x2\x105\x106"+
		"\a\x30\x2\x2\x106\x107\ah\x2\x2\x107\x108\ak\x2\x2\x108\x109\ap\x2\x2"+
		"\x109\x10A\a\x66\x2\x2\x10AZ\x3\x2\x2\x2\x10B\x10D\t\x6\x2\x2\x10C\x10B"+
		"\x3\x2\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10E\x10F\x3"+
		"\x2\x2\x2\x10F\x110\x3\x2\x2\x2\x110\x111\b.\x2\x2\x111\\\x3\x2\x2\x2"+
		"\x112\x113\a\x31\x2\x2\x113\x114\a,\x2\x2\x114\x118\x3\x2\x2\x2\x115\x117"+
		"\v\x2\x2\x2\x116\x115\x3\x2\x2\x2\x117\x11A\x3\x2\x2\x2\x118\x119\x3\x2"+
		"\x2\x2\x118\x116\x3\x2\x2\x2\x119\x11B\x3\x2\x2\x2\x11A\x118\x3\x2\x2"+
		"\x2\x11B\x11C\a,\x2\x2\x11C\x11D\a\x31\x2\x2\x11D\x11E\x3\x2\x2\x2\x11E"+
		"\x11F\b/\x3\x2\x11F^\x3\x2\x2\x2\x120\x121\a\x31\x2\x2\x121\x122\a\x31"+
		"\x2\x2\x122\x126\x3\x2\x2\x2\x123\x125\n\a\x2\x2\x124\x123\x3\x2\x2\x2"+
		"\x125\x128\x3\x2\x2\x2\x126\x124\x3\x2\x2\x2\x126\x127\x3\x2\x2\x2\x127"+
		"\x129\x3\x2\x2\x2\x128\x126\x3\x2\x2\x2\x129\x12A\b\x30\x3\x2\x12A`\x3"+
		"\x2\x2\x2\xF\x2\x62gjouw\x84\xBB\xC1\x10E\x118\x126\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HaCS
