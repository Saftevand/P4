//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\GryPetersen\Documents\P4\HaCS\HaCS\HaCS.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HaCS {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class HaCSLexer : Lexer {
	public const int
		INT=1, FLOAT=2, CHAR=3, BOOL=4, INTType=5, FLOATType=6, CHARType=7, BOOLType=8, 
		LIST=9, MAIN=10, IF=11, ELSEIF=12, ELSE=13, RETURN=14, IDENTIFIER=15, 
		EXP=16, INC=17, DEC=18, MUL=19, DIV=20, MOD=21, ADD=22, SUB=23, AND=24, 
		OR=25, EQ=26, NEQ=27, GT=28, GE=29, LT=30, LE=31, NEGATE=32, ASSIGN=33, 
		LPAREN=34, RPAREN=35, LBRACKET=36, RBRACKET=37, LCURLBRACKET=38, RCURLBRACKET=39, 
		DELIMITER=40, EOS=41, LAMBDA=42, WS=43, COMMENT=44, LINE_COMMENT=45;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "FLOAT", "CHAR", "BOOL", "INTType", "FLOATType", "CHARType", "BOOLType", 
		"LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", "EXP", 
		"INC", "DEC", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "EQ", "NEQ", 
		"GT", "GE", "LT", "LE", "NEGATE", "ASSIGN", "LPAREN", "RPAREN", "LBRACKET", 
		"RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", "EOS", "LAMBDA", 
		"WS", "COMMENT", "LINE_COMMENT"
	};


	public HaCSLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'int'", "'float'", "'char'", "'bool'", 
		"'List'", "'main'", "'if'", "'elseif'", "'else'", "'return'", null, "'^'", 
		"'++'", "'--'", "'*'", "'/'", "'%'", "'+'", "'-'", "'&&'", "'||'", "'=='", 
		"'!='", "'>'", "'>='", "'<'", "'<='", "'!'", "'='", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "','", "';'", "'=>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "FLOAT", "CHAR", "BOOL", "INTType", "FLOATType", "CHARType", 
		"BOOLType", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", 
		"EXP", "INC", "DEC", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "EQ", 
		"NEQ", "GT", "GE", "LT", "LE", "NEGATE", "ASSIGN", "LPAREN", "RPAREN", 
		"LBRACKET", "RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", "EOS", 
		"LAMBDA", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HaCS.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2/\x11F\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x3\x2\x5\x2_\n\x2\x3\x2\x6\x2\x62\n\x2\r"+
		"\x2\xE\x2\x63\x3\x3\x5\x3g\n\x3\x3\x3\x6\x3j\n\x3\r\x3\xE\x3k\x3\x3\x3"+
		"\x3\x6\x3p\n\x3\r\x3\xE\x3q\x5\x3t\n\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5\x81\n\x5\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
		"\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3"+
		"\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x5\x10\xB8\n\x10"+
		"\x3\x10\x3\x10\a\x10\xBC\n\x10\f\x10\xE\x10\xBF\v\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3"+
		"\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3"+
		"#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3"+
		"+\x3,\x6,\x101\n,\r,\xE,\x102\x3,\x3,\x3-\x3-\x3-\x3-\a-\x10B\n-\f-\xE"+
		"-\x10E\v-\x3-\x3-\x3-\x3-\x3-\x3.\x3.\x3.\x3.\a.\x119\n.\f.\xE.\x11C\v"+
		".\x3.\x3.\x3\x10C\x2\x2/\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2"+
		"\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D"+
		"\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2"+
		"\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2"+
		"\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2"+
		"*S\x2+U\x2,W\x2-Y\x2.[\x2/\x3\x2\b\x3\x2\x32;\x3\x2\x38\x38\x4\x2\x43"+
		"\\\x63|\x5\x2\x32;\x43\\\x63|\x5\x2\v\f\xE\xF\"\"\x4\x2\f\f\xF\xF\x12A"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2"+
		"\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2"+
		"\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2"+
		"\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2"+
		"\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2"+
		"S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2"+
		"\x2\x2\x3^\x3\x2\x2\x2\x5\x66\x3\x2\x2\x2\au\x3\x2\x2\x2\t\x80\x3\x2\x2"+
		"\x2\v\x82\x3\x2\x2\x2\r\x86\x3\x2\x2\x2\xF\x8C\x3\x2\x2\x2\x11\x91\x3"+
		"\x2\x2\x2\x13\x96\x3\x2\x2\x2\x15\x9B\x3\x2\x2\x2\x17\xA0\x3\x2\x2\x2"+
		"\x19\xA3\x3\x2\x2\x2\x1B\xAA\x3\x2\x2\x2\x1D\xAF\x3\x2\x2\x2\x1F\xB7\x3"+
		"\x2\x2\x2!\xC0\x3\x2\x2\x2#\xC2\x3\x2\x2\x2%\xC5\x3\x2\x2\x2\'\xC8\x3"+
		"\x2\x2\x2)\xCA\x3\x2\x2\x2+\xCC\x3\x2\x2\x2-\xCE\x3\x2\x2\x2/\xD0\x3\x2"+
		"\x2\x2\x31\xD2\x3\x2\x2\x2\x33\xD5\x3\x2\x2\x2\x35\xD8\x3\x2\x2\x2\x37"+
		"\xDB\x3\x2\x2\x2\x39\xDE\x3\x2\x2\x2;\xE0\x3\x2\x2\x2=\xE3\x3\x2\x2\x2"+
		"?\xE5\x3\x2\x2\x2\x41\xE8\x3\x2\x2\x2\x43\xEA\x3\x2\x2\x2\x45\xEC\x3\x2"+
		"\x2\x2G\xEE\x3\x2\x2\x2I\xF0\x3\x2\x2\x2K\xF2\x3\x2\x2\x2M\xF4\x3\x2\x2"+
		"\x2O\xF6\x3\x2\x2\x2Q\xF8\x3\x2\x2\x2S\xFA\x3\x2\x2\x2U\xFC\x3\x2\x2\x2"+
		"W\x100\x3\x2\x2\x2Y\x106\x3\x2\x2\x2[\x114\x3\x2\x2\x2]_\a/\x2\x2^]\x3"+
		"\x2\x2\x2^_\x3\x2\x2\x2_\x61\x3\x2\x2\x2`\x62\x4\x32;\x2\x61`\x3\x2\x2"+
		"\x2\x62\x63\x3\x2\x2\x2\x63\x61\x3\x2\x2\x2\x63\x64\x3\x2\x2\x2\x64\x4"+
		"\x3\x2\x2\x2\x65g\a/\x2\x2\x66\x65\x3\x2\x2\x2\x66g\x3\x2\x2\x2gi\x3\x2"+
		"\x2\x2hj\t\x2\x2\x2ih\x3\x2\x2\x2jk\x3\x2\x2\x2ki\x3\x2\x2\x2kl\x3\x2"+
		"\x2\x2ls\x3\x2\x2\x2mo\a\x30\x2\x2np\t\x2\x2\x2on\x3\x2\x2\x2pq\x3\x2"+
		"\x2\x2qo\x3\x2\x2\x2qr\x3\x2\x2\x2rt\x3\x2\x2\x2sm\x3\x2\x2\x2st\x3\x2"+
		"\x2\x2t\x6\x3\x2\x2\x2uv\t\x3\x2\x2v\b\x3\x2\x2\x2wx\av\x2\x2xy\at\x2"+
		"\x2yz\aw\x2\x2z\x81\ag\x2\x2{|\ah\x2\x2|}\a\x63\x2\x2}~\an\x2\x2~\x7F"+
		"\au\x2\x2\x7F\x81\ag\x2\x2\x80w\x3\x2\x2\x2\x80{\x3\x2\x2\x2\x81\n\x3"+
		"\x2\x2\x2\x82\x83\ak\x2\x2\x83\x84\ap\x2\x2\x84\x85\av\x2\x2\x85\f\x3"+
		"\x2\x2\x2\x86\x87\ah\x2\x2\x87\x88\an\x2\x2\x88\x89\aq\x2\x2\x89\x8A\a"+
		"\x63\x2\x2\x8A\x8B\av\x2\x2\x8B\xE\x3\x2\x2\x2\x8C\x8D\a\x65\x2\x2\x8D"+
		"\x8E\aj\x2\x2\x8E\x8F\a\x63\x2\x2\x8F\x90\at\x2\x2\x90\x10\x3\x2\x2\x2"+
		"\x91\x92\a\x64\x2\x2\x92\x93\aq\x2\x2\x93\x94\aq\x2\x2\x94\x95\an\x2\x2"+
		"\x95\x12\x3\x2\x2\x2\x96\x97\aN\x2\x2\x97\x98\ak\x2\x2\x98\x99\au\x2\x2"+
		"\x99\x9A\av\x2\x2\x9A\x14\x3\x2\x2\x2\x9B\x9C\ao\x2\x2\x9C\x9D\a\x63\x2"+
		"\x2\x9D\x9E\ak\x2\x2\x9E\x9F\ap\x2\x2\x9F\x16\x3\x2\x2\x2\xA0\xA1\ak\x2"+
		"\x2\xA1\xA2\ah\x2\x2\xA2\x18\x3\x2\x2\x2\xA3\xA4\ag\x2\x2\xA4\xA5\an\x2"+
		"\x2\xA5\xA6\au\x2\x2\xA6\xA7\ag\x2\x2\xA7\xA8\ak\x2\x2\xA8\xA9\ah\x2\x2"+
		"\xA9\x1A\x3\x2\x2\x2\xAA\xAB\ag\x2\x2\xAB\xAC\an\x2\x2\xAC\xAD\au\x2\x2"+
		"\xAD\xAE\ag\x2\x2\xAE\x1C\x3\x2\x2\x2\xAF\xB0\at\x2\x2\xB0\xB1\ag\x2\x2"+
		"\xB1\xB2\av\x2\x2\xB2\xB3\aw\x2\x2\xB3\xB4\at\x2\x2\xB4\xB5\ap\x2\x2\xB5"+
		"\x1E\x3\x2\x2\x2\xB6\xB8\a\x61\x2\x2\xB7\xB6\x3\x2\x2\x2\xB7\xB8\x3\x2"+
		"\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xBD\t\x4\x2\x2\xBA\xBC\t\x5\x2\x2\xBB\xBA"+
		"\x3\x2\x2\x2\xBC\xBF\x3\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2"+
		"\x2\xBE \x3\x2\x2\x2\xBF\xBD\x3\x2\x2\x2\xC0\xC1\a`\x2\x2\xC1\"\x3\x2"+
		"\x2\x2\xC2\xC3\a-\x2\x2\xC3\xC4\a-\x2\x2\xC4$\x3\x2\x2\x2\xC5\xC6\a/\x2"+
		"\x2\xC6\xC7\a/\x2\x2\xC7&\x3\x2\x2\x2\xC8\xC9\a,\x2\x2\xC9(\x3\x2\x2\x2"+
		"\xCA\xCB\a\x31\x2\x2\xCB*\x3\x2\x2\x2\xCC\xCD\a\'\x2\x2\xCD,\x3\x2\x2"+
		"\x2\xCE\xCF\a-\x2\x2\xCF.\x3\x2\x2\x2\xD0\xD1\a/\x2\x2\xD1\x30\x3\x2\x2"+
		"\x2\xD2\xD3\a(\x2\x2\xD3\xD4\a(\x2\x2\xD4\x32\x3\x2\x2\x2\xD5\xD6\a~\x2"+
		"\x2\xD6\xD7\a~\x2\x2\xD7\x34\x3\x2\x2\x2\xD8\xD9\a?\x2\x2\xD9\xDA\a?\x2"+
		"\x2\xDA\x36\x3\x2\x2\x2\xDB\xDC\a#\x2\x2\xDC\xDD\a?\x2\x2\xDD\x38\x3\x2"+
		"\x2\x2\xDE\xDF\a@\x2\x2\xDF:\x3\x2\x2\x2\xE0\xE1\a@\x2\x2\xE1\xE2\a?\x2"+
		"\x2\xE2<\x3\x2\x2\x2\xE3\xE4\a>\x2\x2\xE4>\x3\x2\x2\x2\xE5\xE6\a>\x2\x2"+
		"\xE6\xE7\a?\x2\x2\xE7@\x3\x2\x2\x2\xE8\xE9\a#\x2\x2\xE9\x42\x3\x2\x2\x2"+
		"\xEA\xEB\a?\x2\x2\xEB\x44\x3\x2\x2\x2\xEC\xED\a*\x2\x2\xED\x46\x3\x2\x2"+
		"\x2\xEE\xEF\a+\x2\x2\xEFH\x3\x2\x2\x2\xF0\xF1\a]\x2\x2\xF1J\x3\x2\x2\x2"+
		"\xF2\xF3\a_\x2\x2\xF3L\x3\x2\x2\x2\xF4\xF5\a}\x2\x2\xF5N\x3\x2\x2\x2\xF6"+
		"\xF7\a\x7F\x2\x2\xF7P\x3\x2\x2\x2\xF8\xF9\a.\x2\x2\xF9R\x3\x2\x2\x2\xFA"+
		"\xFB\a=\x2\x2\xFBT\x3\x2\x2\x2\xFC\xFD\a?\x2\x2\xFD\xFE\a@\x2\x2\xFEV"+
		"\x3\x2\x2\x2\xFF\x101\t\x6\x2\x2\x100\xFF\x3\x2\x2\x2\x101\x102\x3\x2"+
		"\x2\x2\x102\x100\x3\x2\x2\x2\x102\x103\x3\x2\x2\x2\x103\x104\x3\x2\x2"+
		"\x2\x104\x105\b,\x2\x2\x105X\x3\x2\x2\x2\x106\x107\a\x31\x2\x2\x107\x108"+
		"\a,\x2\x2\x108\x10C\x3\x2\x2\x2\x109\x10B\v\x2\x2\x2\x10A\x109\x3\x2\x2"+
		"\x2\x10B\x10E\x3\x2\x2\x2\x10C\x10D\x3\x2\x2\x2\x10C\x10A\x3\x2\x2\x2"+
		"\x10D\x10F\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10F\x110\a,\x2\x2\x110\x111"+
		"\a\x31\x2\x2\x111\x112\x3\x2\x2\x2\x112\x113\b-\x3\x2\x113Z\x3\x2\x2\x2"+
		"\x114\x115\a\x31\x2\x2\x115\x116\a\x31\x2\x2\x116\x11A\x3\x2\x2\x2\x117"+
		"\x119\n\a\x2\x2\x118\x117\x3\x2\x2\x2\x119\x11C\x3\x2\x2\x2\x11A\x118"+
		"\x3\x2\x2\x2\x11A\x11B\x3\x2\x2\x2\x11B\x11D\x3\x2\x2\x2\x11C\x11A\x3"+
		"\x2\x2\x2\x11D\x11E\b.\x3\x2\x11E\\\x3\x2\x2\x2\xF\x2^\x63\x66kqs\x80"+
		"\xB7\xBD\x102\x10C\x11A\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HaCS
