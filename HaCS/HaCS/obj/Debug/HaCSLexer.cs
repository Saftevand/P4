//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\GryPetersen\Documents\P4\HaCS\HaCS\HaCS.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HaCS {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class HaCSLexer : Lexer {
	public const int
		INT=1, FLOAT=2, CHAR=3, BOOL=4, INT_Type=5, FLOAT_Type=6, CHAR_Type=7, 
		BOOL_Type=8, LIST=9, MAIN=10, IF=11, ELSEIF=12, ELSE=13, RETURN=14, IDENTIFIER=15, 
		EXP=16, MUL=17, DIV=18, MOD=19, ADD=20, SUB=21, AND=22, OR=23, EQ=24, 
		NEQ=25, GT=26, GE=27, LT=28, LE=29, NEGATE=30, ASSIGN=31, LPAREN=32, RPAREN=33, 
		LBRACKET=34, RBRACKET=35, LCURLBRACKET=36, RCURLBRACKET=37, DELIMITER=38, 
		EOS=39, LAMBDA=40, WS=41, COMMENT=42, LINE_COMMENT=43;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "EQ", "NEQ", "GT", 
		"GE", "LT", "LE", "NEGATE", "ASSIGN", "LPAREN", "RPAREN", "LBRACKET", 
		"RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", "EOS", "LAMBDA", 
		"WS", "COMMENT", "LINE_COMMENT"
	};


		protected const int EOF = Eof;
		protected const int HIDDEN = Hidden;


	public HaCSLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'int'", "'float'", "'char'", "'bool'", 
		"'List'", "'main'", "'if'", "'elseif'", "'else'", "'return'", null, "'^'", 
		"'*'", "'/'", "'%'", "'+'", "'-'", "'&&'", "'||'", "'=='", "'!='", "'>'", 
		"'>='", "'<'", "'<='", "'!'", "'='", "'('", "')'", "'['", "']'", "'{'", 
		"'}'", "','", "';'", "'=>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "EQ", "NEQ", "GT", 
		"GE", "LT", "LE", "NEGATE", "ASSIGN", "LPAREN", "RPAREN", "LBRACKET", 
		"RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", "EOS", "LAMBDA", 
		"WS", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HaCS.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2-\x115\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x3\x2\x5\x2[\n\x2\x3\x2\x6\x2^\n\x2\r\x2\xE\x2_\x3\x3"+
		"\x5\x3\x63\n\x3\x3\x3\x6\x3\x66\n\x3\r\x3\xE\x3g\x3\x3\x3\x3\x6\x3l\n"+
		"\x3\r\x3\xE\x3m\x5\x3p\n\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5}\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x5\x10\xB4\n\x10\x3\x10\x3\x10"+
		"\a\x10\xB8\n\x10\f\x10\xE\x10\xBB\v\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3"+
		"\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3"+
		"\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&"+
		"\x3\'\x3\'\x3(\x3(\x3)\x3)\x3)\x3*\x6*\xF7\n*\r*\xE*\xF8\x3*\x3*\x3+\x3"+
		"+\x3+\x3+\a+\x101\n+\f+\xE+\x104\v+\x3+\x3+\x3+\x3+\x3+\x3,\x3,\x3,\x3"+
		",\a,\x10F\n,\f,\xE,\x112\v,\x3,\x3,\x3\x102\x2\x2-\x3\x2\x3\x5\x2\x4\a"+
		"\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2"+
		"\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'"+
		"\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2"+
		"%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-\x3\x2\b\x3\x2\x32;\x3\x2\x38"+
		"\x38\x4\x2\x43\\\x63|\x5\x2\x32;\x43\\\x63|\x5\x2\v\f\xE\xF\"\"\x4\x2"+
		"\f\f\xF\xF\x120\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2"+
		"\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2"+
		"\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2"+
		"\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3"+
		"\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2"+
		"\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2"+
		"\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2"+
		"\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2"+
		"\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2"+
		"\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2"+
		"Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x3Z\x3\x2"+
		"\x2\x2\x5\x62\x3\x2\x2\x2\aq\x3\x2\x2\x2\t|\x3\x2\x2\x2\v~\x3\x2\x2\x2"+
		"\r\x82\x3\x2\x2\x2\xF\x88\x3\x2\x2\x2\x11\x8D\x3\x2\x2\x2\x13\x92\x3\x2"+
		"\x2\x2\x15\x97\x3\x2\x2\x2\x17\x9C\x3\x2\x2\x2\x19\x9F\x3\x2\x2\x2\x1B"+
		"\xA6\x3\x2\x2\x2\x1D\xAB\x3\x2\x2\x2\x1F\xB3\x3\x2\x2\x2!\xBC\x3\x2\x2"+
		"\x2#\xBE\x3\x2\x2\x2%\xC0\x3\x2\x2\x2\'\xC2\x3\x2\x2\x2)\xC4\x3\x2\x2"+
		"\x2+\xC6\x3\x2\x2\x2-\xC8\x3\x2\x2\x2/\xCB\x3\x2\x2\x2\x31\xCE\x3\x2\x2"+
		"\x2\x33\xD1\x3\x2\x2\x2\x35\xD4\x3\x2\x2\x2\x37\xD6\x3\x2\x2\x2\x39\xD9"+
		"\x3\x2\x2\x2;\xDB\x3\x2\x2\x2=\xDE\x3\x2\x2\x2?\xE0\x3\x2\x2\x2\x41\xE2"+
		"\x3\x2\x2\x2\x43\xE4\x3\x2\x2\x2\x45\xE6\x3\x2\x2\x2G\xE8\x3\x2\x2\x2"+
		"I\xEA\x3\x2\x2\x2K\xEC\x3\x2\x2\x2M\xEE\x3\x2\x2\x2O\xF0\x3\x2\x2\x2Q"+
		"\xF2\x3\x2\x2\x2S\xF6\x3\x2\x2\x2U\xFC\x3\x2\x2\x2W\x10A\x3\x2\x2\x2Y"+
		"[\a/\x2\x2ZY\x3\x2\x2\x2Z[\x3\x2\x2\x2[]\x3\x2\x2\x2\\^\x4\x32;\x2]\\"+
		"\x3\x2\x2\x2^_\x3\x2\x2\x2_]\x3\x2\x2\x2_`\x3\x2\x2\x2`\x4\x3\x2\x2\x2"+
		"\x61\x63\a/\x2\x2\x62\x61\x3\x2\x2\x2\x62\x63\x3\x2\x2\x2\x63\x65\x3\x2"+
		"\x2\x2\x64\x66\t\x2\x2\x2\x65\x64\x3\x2\x2\x2\x66g\x3\x2\x2\x2g\x65\x3"+
		"\x2\x2\x2gh\x3\x2\x2\x2ho\x3\x2\x2\x2ik\a\x30\x2\x2jl\t\x2\x2\x2kj\x3"+
		"\x2\x2\x2lm\x3\x2\x2\x2mk\x3\x2\x2\x2mn\x3\x2\x2\x2np\x3\x2\x2\x2oi\x3"+
		"\x2\x2\x2op\x3\x2\x2\x2p\x6\x3\x2\x2\x2qr\t\x3\x2\x2r\b\x3\x2\x2\x2st"+
		"\av\x2\x2tu\at\x2\x2uv\aw\x2\x2v}\ag\x2\x2wx\ah\x2\x2xy\a\x63\x2\x2yz"+
		"\an\x2\x2z{\au\x2\x2{}\ag\x2\x2|s\x3\x2\x2\x2|w\x3\x2\x2\x2}\n\x3\x2\x2"+
		"\x2~\x7F\ak\x2\x2\x7F\x80\ap\x2\x2\x80\x81\av\x2\x2\x81\f\x3\x2\x2\x2"+
		"\x82\x83\ah\x2\x2\x83\x84\an\x2\x2\x84\x85\aq\x2\x2\x85\x86\a\x63\x2\x2"+
		"\x86\x87\av\x2\x2\x87\xE\x3\x2\x2\x2\x88\x89\a\x65\x2\x2\x89\x8A\aj\x2"+
		"\x2\x8A\x8B\a\x63\x2\x2\x8B\x8C\at\x2\x2\x8C\x10\x3\x2\x2\x2\x8D\x8E\a"+
		"\x64\x2\x2\x8E\x8F\aq\x2\x2\x8F\x90\aq\x2\x2\x90\x91\an\x2\x2\x91\x12"+
		"\x3\x2\x2\x2\x92\x93\aN\x2\x2\x93\x94\ak\x2\x2\x94\x95\au\x2\x2\x95\x96"+
		"\av\x2\x2\x96\x14\x3\x2\x2\x2\x97\x98\ao\x2\x2\x98\x99\a\x63\x2\x2\x99"+
		"\x9A\ak\x2\x2\x9A\x9B\ap\x2\x2\x9B\x16\x3\x2\x2\x2\x9C\x9D\ak\x2\x2\x9D"+
		"\x9E\ah\x2\x2\x9E\x18\x3\x2\x2\x2\x9F\xA0\ag\x2\x2\xA0\xA1\an\x2\x2\xA1"+
		"\xA2\au\x2\x2\xA2\xA3\ag\x2\x2\xA3\xA4\ak\x2\x2\xA4\xA5\ah\x2\x2\xA5\x1A"+
		"\x3\x2\x2\x2\xA6\xA7\ag\x2\x2\xA7\xA8\an\x2\x2\xA8\xA9\au\x2\x2\xA9\xAA"+
		"\ag\x2\x2\xAA\x1C\x3\x2\x2\x2\xAB\xAC\at\x2\x2\xAC\xAD\ag\x2\x2\xAD\xAE"+
		"\av\x2\x2\xAE\xAF\aw\x2\x2\xAF\xB0\at\x2\x2\xB0\xB1\ap\x2\x2\xB1\x1E\x3"+
		"\x2\x2\x2\xB2\xB4\a\x61\x2\x2\xB3\xB2\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2"+
		"\xB4\xB5\x3\x2\x2\x2\xB5\xB9\t\x4\x2\x2\xB6\xB8\t\x5\x2\x2\xB7\xB6\x3"+
		"\x2\x2\x2\xB8\xBB\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2"+
		"\xBA \x3\x2\x2\x2\xBB\xB9\x3\x2\x2\x2\xBC\xBD\a`\x2\x2\xBD\"\x3\x2\x2"+
		"\x2\xBE\xBF\a,\x2\x2\xBF$\x3\x2\x2\x2\xC0\xC1\a\x31\x2\x2\xC1&\x3\x2\x2"+
		"\x2\xC2\xC3\a\'\x2\x2\xC3(\x3\x2\x2\x2\xC4\xC5\a-\x2\x2\xC5*\x3\x2\x2"+
		"\x2\xC6\xC7\a/\x2\x2\xC7,\x3\x2\x2\x2\xC8\xC9\a(\x2\x2\xC9\xCA\a(\x2\x2"+
		"\xCA.\x3\x2\x2\x2\xCB\xCC\a~\x2\x2\xCC\xCD\a~\x2\x2\xCD\x30\x3\x2\x2\x2"+
		"\xCE\xCF\a?\x2\x2\xCF\xD0\a?\x2\x2\xD0\x32\x3\x2\x2\x2\xD1\xD2\a#\x2\x2"+
		"\xD2\xD3\a?\x2\x2\xD3\x34\x3\x2\x2\x2\xD4\xD5\a@\x2\x2\xD5\x36\x3\x2\x2"+
		"\x2\xD6\xD7\a@\x2\x2\xD7\xD8\a?\x2\x2\xD8\x38\x3\x2\x2\x2\xD9\xDA\a>\x2"+
		"\x2\xDA:\x3\x2\x2\x2\xDB\xDC\a>\x2\x2\xDC\xDD\a?\x2\x2\xDD<\x3\x2\x2\x2"+
		"\xDE\xDF\a#\x2\x2\xDF>\x3\x2\x2\x2\xE0\xE1\a?\x2\x2\xE1@\x3\x2\x2\x2\xE2"+
		"\xE3\a*\x2\x2\xE3\x42\x3\x2\x2\x2\xE4\xE5\a+\x2\x2\xE5\x44\x3\x2\x2\x2"+
		"\xE6\xE7\a]\x2\x2\xE7\x46\x3\x2\x2\x2\xE8\xE9\a_\x2\x2\xE9H\x3\x2\x2\x2"+
		"\xEA\xEB\a}\x2\x2\xEBJ\x3\x2\x2\x2\xEC\xED\a\x7F\x2\x2\xEDL\x3\x2\x2\x2"+
		"\xEE\xEF\a.\x2\x2\xEFN\x3\x2\x2\x2\xF0\xF1\a=\x2\x2\xF1P\x3\x2\x2\x2\xF2"+
		"\xF3\a?\x2\x2\xF3\xF4\a@\x2\x2\xF4R\x3\x2\x2\x2\xF5\xF7\t\x6\x2\x2\xF6"+
		"\xF5\x3\x2\x2\x2\xF7\xF8\x3\x2\x2\x2\xF8\xF6\x3\x2\x2\x2\xF8\xF9\x3\x2"+
		"\x2\x2\xF9\xFA\x3\x2\x2\x2\xFA\xFB\b*\x2\x2\xFBT\x3\x2\x2\x2\xFC\xFD\a"+
		"\x31\x2\x2\xFD\xFE\a,\x2\x2\xFE\x102\x3\x2\x2\x2\xFF\x101\v\x2\x2\x2\x100"+
		"\xFF\x3\x2\x2\x2\x101\x104\x3\x2\x2\x2\x102\x103\x3\x2\x2\x2\x102\x100"+
		"\x3\x2\x2\x2\x103\x105\x3\x2\x2\x2\x104\x102\x3\x2\x2\x2\x105\x106\a,"+
		"\x2\x2\x106\x107\a\x31\x2\x2\x107\x108\x3\x2\x2\x2\x108\x109\b+\x3\x2"+
		"\x109V\x3\x2\x2\x2\x10A\x10B\a\x31\x2\x2\x10B\x10C\a\x31\x2\x2\x10C\x110"+
		"\x3\x2\x2\x2\x10D\x10F\n\a\x2\x2\x10E\x10D\x3\x2\x2\x2\x10F\x112\x3\x2"+
		"\x2\x2\x110\x10E\x3\x2\x2\x2\x110\x111\x3\x2\x2\x2\x111\x113\x3\x2\x2"+
		"\x2\x112\x110\x3\x2\x2\x2\x113\x114\b,\x3\x2\x114X\x3\x2\x2\x2\xF\x2Z"+
		"_\x62gmo|\xB3\xB9\xF8\x102\x110\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HaCS
