//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\GryPetersen\Documents\P4\HaCS\HaCS\HaCS.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HaCS {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class HaCSLexer : Lexer {
	public const int
		INT=1, FLOAT=2, CHAR=3, BOOL=4, INT_Type=5, FLOAT_Type=6, CHAR_Type=7, 
		BOOL_Type=8, LIST=9, MAIN=10, IF=11, ELSEIF=12, ELSE=13, RETURN=14, FIND=15, 
		WHERE=16, FIRST=17, LAST=18, MAP=19, REDUCE=20, Fold=21, WRITELINE=22, 
		IDENTIFIER=23, EXP=24, MUL=25, DIV=26, MOD=27, ADD=28, SUB=29, AND=30, 
		OR=31, PIPE=32, EQ=33, NEQ=34, GT=35, GE=36, LT=37, DOT=38, LE=39, LTMINUS=40, 
		NEGATE=41, ASSIGN=42, LPAREN=43, RPAREN=44, LBRACKET=45, RBRACKET=46, 
		LCURLBRACKET=47, RCURLBRACKET=48, DELIMITER=49, EOS=50, LAMBDA=51, WS=52, 
		COMMENT=53, LINE_COMMENT=54;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "FIND", 
		"WHERE", "FIRST", "LAST", "MAP", "REDUCE", "Fold", "WRITELINE", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "PIPE", "EQ", "NEQ", 
		"GT", "GE", "LT", "DOT", "LE", "LTMINUS", "NEGATE", "ASSIGN", "LPAREN", 
		"RPAREN", "LBRACKET", "RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", 
		"EOS", "LAMBDA", "WS", "COMMENT", "LINE_COMMENT"
	};


		protected const int EOF = Eof;
		protected const int HIDDEN = Hidden;


	public HaCSLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'int'", "'float'", "'char'", "'bool'", 
		"'List'", "'main'", "'if'", "'elseif'", "'else'", "'return'", "'find'", 
		"'where'", "'first'", "'last'", "'map'", "'reduce'", "'fold'", "'WriteLine'", 
		null, "'^'", "'*'", "'/'", "'%'", "'+'", "'-'", "'&&'", "'||'", "'|'", 
		"'=='", "'!='", "'>'", "'>='", "'<'", "'.'", "'<='", "'<-'", "'!'", "'='", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "','", "';'", "'=>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INT", "FLOAT", "CHAR", "BOOL", "INT_Type", "FLOAT_Type", "CHAR_Type", 
		"BOOL_Type", "LIST", "MAIN", "IF", "ELSEIF", "ELSE", "RETURN", "FIND", 
		"WHERE", "FIRST", "LAST", "MAP", "REDUCE", "Fold", "WRITELINE", "IDENTIFIER", 
		"EXP", "MUL", "DIV", "MOD", "ADD", "SUB", "AND", "OR", "PIPE", "EQ", "NEQ", 
		"GT", "GE", "LT", "DOT", "LE", "LTMINUS", "NEGATE", "ASSIGN", "LPAREN", 
		"RPAREN", "LBRACKET", "RBRACKET", "LCURLBRACKET", "RCURLBRACKET", "DELIMITER", 
		"EOS", "LAMBDA", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HaCS.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x38\x162\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x3\x2\x5\x2q\n\x2\x3\x2\x6\x2t\n\x2\r\x2\xE\x2u\x3\x3\x5\x3y\n"+
		"\x3\x3\x3\x6\x3|\n\x3\r\x3\xE\x3}\x3\x3\x3\x3\x6\x3\x82\n\x3\r\x3\xE\x3"+
		"\x83\x5\x3\x86\n\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x5\x5\x93\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n"+
		"\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12"+
		"\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x18\x5\x18\xFA\n\x18\x3\x18\x3\x18\a\x18\xFE\n\x18\f"+
		"\x18\xE\x18\x101\v\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3"+
		"!\x3!\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3$\x3$\x3%\x3%\x3%\x3&\x3&\x3\'\x3\'"+
		"\x3(\x3(\x3(\x3)\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3"+
		"/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32\x3\x33\x3\x33\x3\x34\x3\x34"+
		"\x3\x34\x3\x35\x6\x35\x144\n\x35\r\x35\xE\x35\x145\x3\x35\x3\x35\x3\x36"+
		"\x3\x36\x3\x36\x3\x36\a\x36\x14E\n\x36\f\x36\xE\x36\x151\v\x36\x3\x36"+
		"\x3\x36\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37\x3\x37\a\x37\x15C\n"+
		"\x37\f\x37\xE\x37\x15F\v\x37\x3\x37\x3\x37\x3\x14F\x2\x2\x38\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_"+
		"\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38"+
		"\x3\x2\b\x3\x2\x32;\x3\x2\x38\x38\x4\x2\x43\\\x63|\x5\x2\x32;\x43\\\x63"+
		"|\x5\x2\v\f\xE\xF\"\"\x4\x2\f\f\xF\xF\x16D\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2"+
		"M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2"+
		"\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2"+
		"\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2"+
		"\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x3"+
		"p\x3\x2\x2\x2\x5x\x3\x2\x2\x2\a\x87\x3\x2\x2\x2\t\x92\x3\x2\x2\x2\v\x94"+
		"\x3\x2\x2\x2\r\x98\x3\x2\x2\x2\xF\x9E\x3\x2\x2\x2\x11\xA3\x3\x2\x2\x2"+
		"\x13\xA8\x3\x2\x2\x2\x15\xAD\x3\x2\x2\x2\x17\xB2\x3\x2\x2\x2\x19\xB5\x3"+
		"\x2\x2\x2\x1B\xBC\x3\x2\x2\x2\x1D\xC1\x3\x2\x2\x2\x1F\xC8\x3\x2\x2\x2"+
		"!\xCD\x3\x2\x2\x2#\xD3\x3\x2\x2\x2%\xD9\x3\x2\x2\x2\'\xDE\x3\x2\x2\x2"+
		")\xE2\x3\x2\x2\x2+\xE9\x3\x2\x2\x2-\xEE\x3\x2\x2\x2/\xF9\x3\x2\x2\x2\x31"+
		"\x102\x3\x2\x2\x2\x33\x104\x3\x2\x2\x2\x35\x106\x3\x2\x2\x2\x37\x108\x3"+
		"\x2\x2\x2\x39\x10A\x3\x2\x2\x2;\x10C\x3\x2\x2\x2=\x10E\x3\x2\x2\x2?\x111"+
		"\x3\x2\x2\x2\x41\x114\x3\x2\x2\x2\x43\x116\x3\x2\x2\x2\x45\x119\x3\x2"+
		"\x2\x2G\x11C\x3\x2\x2\x2I\x11E\x3\x2\x2\x2K\x121\x3\x2\x2\x2M\x123\x3"+
		"\x2\x2\x2O\x125\x3\x2\x2\x2Q\x128\x3\x2\x2\x2S\x12B\x3\x2\x2\x2U\x12D"+
		"\x3\x2\x2\x2W\x12F\x3\x2\x2\x2Y\x131\x3\x2\x2\x2[\x133\x3\x2\x2\x2]\x135"+
		"\x3\x2\x2\x2_\x137\x3\x2\x2\x2\x61\x139\x3\x2\x2\x2\x63\x13B\x3\x2\x2"+
		"\x2\x65\x13D\x3\x2\x2\x2g\x13F\x3\x2\x2\x2i\x143\x3\x2\x2\x2k\x149\x3"+
		"\x2\x2\x2m\x157\x3\x2\x2\x2oq\a/\x2\x2po\x3\x2\x2\x2pq\x3\x2\x2\x2qs\x3"+
		"\x2\x2\x2rt\x4\x32;\x2sr\x3\x2\x2\x2tu\x3\x2\x2\x2us\x3\x2\x2\x2uv\x3"+
		"\x2\x2\x2v\x4\x3\x2\x2\x2wy\a/\x2\x2xw\x3\x2\x2\x2xy\x3\x2\x2\x2y{\x3"+
		"\x2\x2\x2z|\t\x2\x2\x2{z\x3\x2\x2\x2|}\x3\x2\x2\x2}{\x3\x2\x2\x2}~\x3"+
		"\x2\x2\x2~\x85\x3\x2\x2\x2\x7F\x81\a\x30\x2\x2\x80\x82\t\x2\x2\x2\x81"+
		"\x80\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2\x83\x81\x3\x2\x2\x2\x83\x84\x3\x2"+
		"\x2\x2\x84\x86\x3\x2\x2\x2\x85\x7F\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86"+
		"\x6\x3\x2\x2\x2\x87\x88\t\x3\x2\x2\x88\b\x3\x2\x2\x2\x89\x8A\av\x2\x2"+
		"\x8A\x8B\at\x2\x2\x8B\x8C\aw\x2\x2\x8C\x93\ag\x2\x2\x8D\x8E\ah\x2\x2\x8E"+
		"\x8F\a\x63\x2\x2\x8F\x90\an\x2\x2\x90\x91\au\x2\x2\x91\x93\ag\x2\x2\x92"+
		"\x89\x3\x2\x2\x2\x92\x8D\x3\x2\x2\x2\x93\n\x3\x2\x2\x2\x94\x95\ak\x2\x2"+
		"\x95\x96\ap\x2\x2\x96\x97\av\x2\x2\x97\f\x3\x2\x2\x2\x98\x99\ah\x2\x2"+
		"\x99\x9A\an\x2\x2\x9A\x9B\aq\x2\x2\x9B\x9C\a\x63\x2\x2\x9C\x9D\av\x2\x2"+
		"\x9D\xE\x3\x2\x2\x2\x9E\x9F\a\x65\x2\x2\x9F\xA0\aj\x2\x2\xA0\xA1\a\x63"+
		"\x2\x2\xA1\xA2\at\x2\x2\xA2\x10\x3\x2\x2\x2\xA3\xA4\a\x64\x2\x2\xA4\xA5"+
		"\aq\x2\x2\xA5\xA6\aq\x2\x2\xA6\xA7\an\x2\x2\xA7\x12\x3\x2\x2\x2\xA8\xA9"+
		"\aN\x2\x2\xA9\xAA\ak\x2\x2\xAA\xAB\au\x2\x2\xAB\xAC\av\x2\x2\xAC\x14\x3"+
		"\x2\x2\x2\xAD\xAE\ao\x2\x2\xAE\xAF\a\x63\x2\x2\xAF\xB0\ak\x2\x2\xB0\xB1"+
		"\ap\x2\x2\xB1\x16\x3\x2\x2\x2\xB2\xB3\ak\x2\x2\xB3\xB4\ah\x2\x2\xB4\x18"+
		"\x3\x2\x2\x2\xB5\xB6\ag\x2\x2\xB6\xB7\an\x2\x2\xB7\xB8\au\x2\x2\xB8\xB9"+
		"\ag\x2\x2\xB9\xBA\ak\x2\x2\xBA\xBB\ah\x2\x2\xBB\x1A\x3\x2\x2\x2\xBC\xBD"+
		"\ag\x2\x2\xBD\xBE\an\x2\x2\xBE\xBF\au\x2\x2\xBF\xC0\ag\x2\x2\xC0\x1C\x3"+
		"\x2\x2\x2\xC1\xC2\at\x2\x2\xC2\xC3\ag\x2\x2\xC3\xC4\av\x2\x2\xC4\xC5\a"+
		"w\x2\x2\xC5\xC6\at\x2\x2\xC6\xC7\ap\x2\x2\xC7\x1E\x3\x2\x2\x2\xC8\xC9"+
		"\ah\x2\x2\xC9\xCA\ak\x2\x2\xCA\xCB\ap\x2\x2\xCB\xCC\a\x66\x2\x2\xCC \x3"+
		"\x2\x2\x2\xCD\xCE\ay\x2\x2\xCE\xCF\aj\x2\x2\xCF\xD0\ag\x2\x2\xD0\xD1\a"+
		"t\x2\x2\xD1\xD2\ag\x2\x2\xD2\"\x3\x2\x2\x2\xD3\xD4\ah\x2\x2\xD4\xD5\a"+
		"k\x2\x2\xD5\xD6\at\x2\x2\xD6\xD7\au\x2\x2\xD7\xD8\av\x2\x2\xD8$\x3\x2"+
		"\x2\x2\xD9\xDA\an\x2\x2\xDA\xDB\a\x63\x2\x2\xDB\xDC\au\x2\x2\xDC\xDD\a"+
		"v\x2\x2\xDD&\x3\x2\x2\x2\xDE\xDF\ao\x2\x2\xDF\xE0\a\x63\x2\x2\xE0\xE1"+
		"\ar\x2\x2\xE1(\x3\x2\x2\x2\xE2\xE3\at\x2\x2\xE3\xE4\ag\x2\x2\xE4\xE5\a"+
		"\x66\x2\x2\xE5\xE6\aw\x2\x2\xE6\xE7\a\x65\x2\x2\xE7\xE8\ag\x2\x2\xE8*"+
		"\x3\x2\x2\x2\xE9\xEA\ah\x2\x2\xEA\xEB\aq\x2\x2\xEB\xEC\an\x2\x2\xEC\xED"+
		"\a\x66\x2\x2\xED,\x3\x2\x2\x2\xEE\xEF\aY\x2\x2\xEF\xF0\at\x2\x2\xF0\xF1"+
		"\ak\x2\x2\xF1\xF2\av\x2\x2\xF2\xF3\ag\x2\x2\xF3\xF4\aN\x2\x2\xF4\xF5\a"+
		"k\x2\x2\xF5\xF6\ap\x2\x2\xF6\xF7\ag\x2\x2\xF7.\x3\x2\x2\x2\xF8\xFA\a\x61"+
		"\x2\x2\xF9\xF8\x3\x2\x2\x2\xF9\xFA\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFB"+
		"\xFF\t\x4\x2\x2\xFC\xFE\t\x5\x2\x2\xFD\xFC\x3\x2\x2\x2\xFE\x101\x3\x2"+
		"\x2\x2\xFF\xFD\x3\x2\x2\x2\xFF\x100\x3\x2\x2\x2\x100\x30\x3\x2\x2\x2\x101"+
		"\xFF\x3\x2\x2\x2\x102\x103\a`\x2\x2\x103\x32\x3\x2\x2\x2\x104\x105\a,"+
		"\x2\x2\x105\x34\x3\x2\x2\x2\x106\x107\a\x31\x2\x2\x107\x36\x3\x2\x2\x2"+
		"\x108\x109\a\'\x2\x2\x109\x38\x3\x2\x2\x2\x10A\x10B\a-\x2\x2\x10B:\x3"+
		"\x2\x2\x2\x10C\x10D\a/\x2\x2\x10D<\x3\x2\x2\x2\x10E\x10F\a(\x2\x2\x10F"+
		"\x110\a(\x2\x2\x110>\x3\x2\x2\x2\x111\x112\a~\x2\x2\x112\x113\a~\x2\x2"+
		"\x113@\x3\x2\x2\x2\x114\x115\a~\x2\x2\x115\x42\x3\x2\x2\x2\x116\x117\a"+
		"?\x2\x2\x117\x118\a?\x2\x2\x118\x44\x3\x2\x2\x2\x119\x11A\a#\x2\x2\x11A"+
		"\x11B\a?\x2\x2\x11B\x46\x3\x2\x2\x2\x11C\x11D\a@\x2\x2\x11DH\x3\x2\x2"+
		"\x2\x11E\x11F\a@\x2\x2\x11F\x120\a?\x2\x2\x120J\x3\x2\x2\x2\x121\x122"+
		"\a>\x2\x2\x122L\x3\x2\x2\x2\x123\x124\a\x30\x2\x2\x124N\x3\x2\x2\x2\x125"+
		"\x126\a>\x2\x2\x126\x127\a?\x2\x2\x127P\x3\x2\x2\x2\x128\x129\a>\x2\x2"+
		"\x129\x12A\a/\x2\x2\x12AR\x3\x2\x2\x2\x12B\x12C\a#\x2\x2\x12CT\x3\x2\x2"+
		"\x2\x12D\x12E\a?\x2\x2\x12EV\x3\x2\x2\x2\x12F\x130\a*\x2\x2\x130X\x3\x2"+
		"\x2\x2\x131\x132\a+\x2\x2\x132Z\x3\x2\x2\x2\x133\x134\a]\x2\x2\x134\\"+
		"\x3\x2\x2\x2\x135\x136\a_\x2\x2\x136^\x3\x2\x2\x2\x137\x138\a}\x2\x2\x138"+
		"`\x3\x2\x2\x2\x139\x13A\a\x7F\x2\x2\x13A\x62\x3\x2\x2\x2\x13B\x13C\a."+
		"\x2\x2\x13C\x64\x3\x2\x2\x2\x13D\x13E\a=\x2\x2\x13E\x66\x3\x2\x2\x2\x13F"+
		"\x140\a?\x2\x2\x140\x141\a@\x2\x2\x141h\x3\x2\x2\x2\x142\x144\t\x6\x2"+
		"\x2\x143\x142\x3\x2\x2\x2\x144\x145\x3\x2\x2\x2\x145\x143\x3\x2\x2\x2"+
		"\x145\x146\x3\x2\x2\x2\x146\x147\x3\x2\x2\x2\x147\x148\b\x35\x2\x2\x148"+
		"j\x3\x2\x2\x2\x149\x14A\a\x31\x2\x2\x14A\x14B\a,\x2\x2\x14B\x14F\x3\x2"+
		"\x2\x2\x14C\x14E\v\x2\x2\x2\x14D\x14C\x3\x2\x2\x2\x14E\x151\x3\x2\x2\x2"+
		"\x14F\x150\x3\x2\x2\x2\x14F\x14D\x3\x2\x2\x2\x150\x152\x3\x2\x2\x2\x151"+
		"\x14F\x3\x2\x2\x2\x152\x153\a,\x2\x2\x153\x154\a\x31\x2\x2\x154\x155\x3"+
		"\x2\x2\x2\x155\x156\b\x36\x3\x2\x156l\x3\x2\x2\x2\x157\x158\a\x31\x2\x2"+
		"\x158\x159\a\x31\x2\x2\x159\x15D\x3\x2\x2\x2\x15A\x15C\n\a\x2\x2\x15B"+
		"\x15A\x3\x2\x2\x2\x15C\x15F\x3\x2\x2\x2\x15D\x15B\x3\x2\x2\x2\x15D\x15E"+
		"\x3\x2\x2\x2\x15E\x160\x3\x2\x2\x2\x15F\x15D\x3\x2\x2\x2\x160\x161\b\x37"+
		"\x3\x2\x161n\x3\x2\x2\x2\xF\x2pux}\x83\x85\x92\xF9\xFF\x145\x14F\x15D"+
		"\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HaCS
